// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CustomerService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Moula.CustomerService {
  public static partial class CustomerService
  {
    static readonly string __ServiceName = "Moula.CustomerService";

    static readonly grpc::Marshaller<global::Moula.CustomerService.CustomerRequest> __Marshaller_Moula_CustomerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.CustomerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.CreateCustomerResponse> __Marshaller_Moula_CreateCustomerResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.CreateCustomerResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.UpdateCustomerResponse> __Marshaller_Moula_UpdateCustomerResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.UpdateCustomerResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.CustomerDetailRequest> __Marshaller_Moula_CustomerDetailRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.CustomerDetailRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.CustomerDetailResponse> __Marshaller_Moula_CustomerDetailResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.CustomerDetailResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.ContactTypeRequest> __Marshaller_Moula_ContactTypeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.ContactTypeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.ContactTypeResponse> __Marshaller_Moula_ContactTypeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.ContactTypeResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.AddressTypeRequest> __Marshaller_Moula_AddressTypeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.AddressTypeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.AddressTypeResponse> __Marshaller_Moula_AddressTypeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.AddressTypeResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.StateRequest> __Marshaller_Moula_StateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.StateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Moula.CustomerService.StateResponse> __Marshaller_Moula_StateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Moula.CustomerService.StateResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Moula.CustomerService.CustomerRequest, global::Moula.CustomerService.CreateCustomerResponse> __Method_CreateCustomer = new grpc::Method<global::Moula.CustomerService.CustomerRequest, global::Moula.CustomerService.CreateCustomerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomer",
        __Marshaller_Moula_CustomerRequest,
        __Marshaller_Moula_CreateCustomerResponse);

    static readonly grpc::Method<global::Moula.CustomerService.CustomerRequest, global::Moula.CustomerService.UpdateCustomerResponse> __Method_UpdateCustomer = new grpc::Method<global::Moula.CustomerService.CustomerRequest, global::Moula.CustomerService.UpdateCustomerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomer",
        __Marshaller_Moula_CustomerRequest,
        __Marshaller_Moula_UpdateCustomerResponse);

    static readonly grpc::Method<global::Moula.CustomerService.CustomerDetailRequest, global::Moula.CustomerService.CustomerDetailResponse> __Method_GetTopCustomers = new grpc::Method<global::Moula.CustomerService.CustomerDetailRequest, global::Moula.CustomerService.CustomerDetailResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetTopCustomers",
        __Marshaller_Moula_CustomerDetailRequest,
        __Marshaller_Moula_CustomerDetailResponse);

    static readonly grpc::Method<global::Moula.CustomerService.ContactTypeRequest, global::Moula.CustomerService.ContactTypeResponse> __Method_GetAllContactTypes = new grpc::Method<global::Moula.CustomerService.ContactTypeRequest, global::Moula.CustomerService.ContactTypeResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllContactTypes",
        __Marshaller_Moula_ContactTypeRequest,
        __Marshaller_Moula_ContactTypeResponse);

    static readonly grpc::Method<global::Moula.CustomerService.AddressTypeRequest, global::Moula.CustomerService.AddressTypeResponse> __Method_GetAllAddressTypes = new grpc::Method<global::Moula.CustomerService.AddressTypeRequest, global::Moula.CustomerService.AddressTypeResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllAddressTypes",
        __Marshaller_Moula_AddressTypeRequest,
        __Marshaller_Moula_AddressTypeResponse);

    static readonly grpc::Method<global::Moula.CustomerService.StateRequest, global::Moula.CustomerService.StateResponse> __Method_GetAllStates = new grpc::Method<global::Moula.CustomerService.StateRequest, global::Moula.CustomerService.StateResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllStates",
        __Marshaller_Moula_StateRequest,
        __Marshaller_Moula_StateResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Moula.CustomerService.CustomerServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CustomerService</summary>
    public abstract partial class CustomerServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Moula.CustomerService.CreateCustomerResponse> CreateCustomer(global::Moula.CustomerService.CustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Moula.CustomerService.UpdateCustomerResponse> UpdateCustomer(global::Moula.CustomerService.CustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetTopCustomers(global::Moula.CustomerService.CustomerDetailRequest request, grpc::IServerStreamWriter<global::Moula.CustomerService.CustomerDetailResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetAllContactTypes(global::Moula.CustomerService.ContactTypeRequest request, grpc::IServerStreamWriter<global::Moula.CustomerService.ContactTypeResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetAllAddressTypes(global::Moula.CustomerService.AddressTypeRequest request, grpc::IServerStreamWriter<global::Moula.CustomerService.AddressTypeResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetAllStates(global::Moula.CustomerService.StateRequest request, grpc::IServerStreamWriter<global::Moula.CustomerService.StateResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CustomerService</summary>
    public partial class CustomerServiceClient : grpc::ClientBase<CustomerServiceClient>
    {
      /// <summary>Creates a new client for CustomerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CustomerServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CustomerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CustomerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CustomerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CustomerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Moula.CustomerService.CreateCustomerResponse CreateCustomer(global::Moula.CustomerService.CustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Moula.CustomerService.CreateCustomerResponse CreateCustomer(global::Moula.CustomerService.CustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Moula.CustomerService.CreateCustomerResponse> CreateCustomerAsync(global::Moula.CustomerService.CustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Moula.CustomerService.CreateCustomerResponse> CreateCustomerAsync(global::Moula.CustomerService.CustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomer, null, options, request);
      }
      public virtual global::Moula.CustomerService.UpdateCustomerResponse UpdateCustomer(global::Moula.CustomerService.CustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Moula.CustomerService.UpdateCustomerResponse UpdateCustomer(global::Moula.CustomerService.CustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Moula.CustomerService.UpdateCustomerResponse> UpdateCustomerAsync(global::Moula.CustomerService.CustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Moula.CustomerService.UpdateCustomerResponse> UpdateCustomerAsync(global::Moula.CustomerService.CustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomer, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.CustomerDetailResponse> GetTopCustomers(global::Moula.CustomerService.CustomerDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTopCustomers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.CustomerDetailResponse> GetTopCustomers(global::Moula.CustomerService.CustomerDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetTopCustomers, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.ContactTypeResponse> GetAllContactTypes(global::Moula.CustomerService.ContactTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllContactTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.ContactTypeResponse> GetAllContactTypes(global::Moula.CustomerService.ContactTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllContactTypes, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.AddressTypeResponse> GetAllAddressTypes(global::Moula.CustomerService.AddressTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAddressTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.AddressTypeResponse> GetAllAddressTypes(global::Moula.CustomerService.AddressTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllAddressTypes, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.StateResponse> GetAllStates(global::Moula.CustomerService.StateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllStates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Moula.CustomerService.StateResponse> GetAllStates(global::Moula.CustomerService.StateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllStates, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CustomerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CustomerServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CustomerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCustomer, serviceImpl.CreateCustomer)
          .AddMethod(__Method_UpdateCustomer, serviceImpl.UpdateCustomer)
          .AddMethod(__Method_GetTopCustomers, serviceImpl.GetTopCustomers)
          .AddMethod(__Method_GetAllContactTypes, serviceImpl.GetAllContactTypes)
          .AddMethod(__Method_GetAllAddressTypes, serviceImpl.GetAllAddressTypes)
          .AddMethod(__Method_GetAllStates, serviceImpl.GetAllStates).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CustomerServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateCustomer, serviceImpl.CreateCustomer);
      serviceBinder.AddMethod(__Method_UpdateCustomer, serviceImpl.UpdateCustomer);
      serviceBinder.AddMethod(__Method_GetTopCustomers, serviceImpl.GetTopCustomers);
      serviceBinder.AddMethod(__Method_GetAllContactTypes, serviceImpl.GetAllContactTypes);
      serviceBinder.AddMethod(__Method_GetAllAddressTypes, serviceImpl.GetAllAddressTypes);
      serviceBinder.AddMethod(__Method_GetAllStates, serviceImpl.GetAllStates);
    }

  }
}
#endregion
